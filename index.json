[{"content":"","date":null,"permalink":"/posts/","section":"","summary":"","title":""},{"content":"One of my goals lately has being to learn how to program and what better way than to just find something that you can automate/improve and try to code it out. In this case, I wanted to create a nmap script that would do a quick scan mostly to just find out what ports where open, it is like a ping scan but it is full handshake. After it grabs all the open ports, then it will do a more comprehensive scan with the -sV argument and the default and safe nmap scripts. Here is the code I came up with, with some help of Copilot:\n#!/usr/bin/python3 import subprocess import os import argparse import shutil # Create ArgumentParser object parser = argparse.ArgumentParser(description=\u0026#39;Perform nmap scan.\u0026#39;) group = parser.add_mutually_exclusive_group(required=True) group.add_argument(\u0026#39;-ip\u0026#39;, help=\u0026#39;Single IP address to scan\u0026#39;) group.add_argument(\u0026#39;-f\u0026#39;, \u0026#39;--file\u0026#39;, help=\u0026#39;File with list of hosts to scan, one per line\u0026#39;) parser.add_argument(\u0026#39;-s\u0026#39;, \u0026#39;--save\u0026#39;, help=\u0026#39;Directory to save the output files (optional)\u0026#39;) args = parser.parse_args() # Check if nmap is installed on the host if not shutil.which(\u0026#34;nmap\u0026#34;): print(\u0026#34;nmap not found. Please install nmap and try again.\u0026#34;) exit(1) # Create the directory if it doesn\u0026#39;t exist if args.save: os.makedirs(args.save, exist_ok=True) try: hosts = [] if args.ip: hosts.append(args.ip) elif args.file: with open(args.file, \u0026#39;r\u0026#39;) as file: hosts = file.read().splitlines() for ip in hosts: print(f\u0026#34;Scanning {ip}...\u0026#34;) # Perform quick scan print(\u0026#34;Performing quick scan of ALL ports...\u0026#34;) quickScanResult = subprocess.run([\u0026#34;nmap\u0026#34;, \u0026#34;-Pn\u0026#34;, \u0026#34;-p-\u0026#34;, \u0026#34;--min-rate=1000\u0026#34;, \u0026#34;-T4\u0026#34;, ip], capture_output=True, text=True) # Extract open ports open_ports = [line.split(\u0026#34;/\u0026#34;)[0] for line in quickScanResult.stdout.split(\u0026#34;\\n\u0026#34;) if \u0026#34;open\u0026#34; in line] print(\u0026#34;Open ports:\u0026#34;, \u0026#34;,\u0026#34;.join(open_ports)) # Perform more comprehensive scan print(\u0026#34;\\nPerforming comprehensive scan with Default and safe nmap script...\\n\u0026#34;) comprehensiveScanResults = subprocess.run([\u0026#34;nmap\u0026#34;, \u0026#34;-Pn\u0026#34;, \u0026#34;-sV\u0026#34;, \u0026#34;-p\u0026#34; + \u0026#34;,\u0026#34;.join(open_ports), \u0026#34;--script=default,vuln\u0026#34;, ip], capture_output=True) # Save results of comprehensive scan to file if args.save: underscoreIP = ip.replace(\u0026#34;.\u0026#34;, \u0026#34;_\u0026#34;) output_file = os.path.join(args.save, \u0026#34;nmapComprehensive-\u0026#34; + underscoreIP + \u0026#34;.txt\u0026#34;) with open(output_file, \u0026#34;w\u0026#34;) as file: file.write(comprehensiveScanResults.stdout.decode()) # Print results of comprehensive scan print(comprehensiveScanResults.stdout.decode()) except Exception as e: print(f\u0026#34;An error occurred: {e}\u0026#34;) ","date":"1 February 2023","permalink":"/posts/coding/python/nmapscript/","section":"","summary":"Nmap python script to help automate","title":"Nmap Python Script"},{"content":"","date":null,"permalink":"/","section":"solidshadw","summary":"","title":"solidshadw"},{"content":"This is what a pretty fun CTF. I will be adding my writeups here and will be dividing them by categories. So far this are ones I have uploded:\nWEB # Passman REVERSE # Hunting License ","date":"26 January 2023","permalink":"/posts/ctf/cyberapocalypse23/intro/","section":"","summary":"CyberApocalypse Intro Challenges","title":"Intro"},{"content":"Passman # Name: Passman\nDificulty: Easy {: .prompt-info }\nThis one was a tricky one. I noticed that it was using graphql when I logged in, register registered a user. Not to familiar with this database but I used 2 things to help me understand how the database was setup. I used GraphlQLMap and Hacktricks GraphQL. This is the output of GraphqlMap:\nsolidshadw@pop-os:~/Downloads/web_passman$ graphqlmap -u \u0026#34;http://138.68.162.218:30735/graphql\u0026#34; --proxy http://127.0.0.1:8080 _____ _ ____ _ / ____| | | / __ \\| | | | __ _ __ __ _ _ __ | |__ | | | | | _ __ ___ __ _ _ __ | | |_ | \u0026#39;__/ _` | \u0026#39;_ \\| \u0026#39;_ \\| | | | | | \u0026#39;_ ` _ \\ / _` | \u0026#39;_ \\ | |__| | | | (_| | |_) | | | | |__| | |____| | | | | | (_| | |_) | \\_____|_| \\__,_| .__/|_| |_|\\___\\_\\______|_| |_| |_|\\__,_| .__/ | | | | |_| |_| Author: @pentest_swissky Version: 1.1 GraphQLmap \u0026gt; help [+] dump_via_introspection : dump GraphQL schema (fragment+FullType) [+] dump_via_fragment : dump GraphQL schema (IntrospectionQuery) [+] nosqli : exploit a nosql injection inside a GraphQL query [+] postgresqli : exploit a sql injection inside a GraphQL query [+] mysqli : exploit a sql injection inside a GraphQL query [+] mssqli : exploit a sql injection inside a GraphQL query [+] exit : gracefully exit the application GraphQLmap \u0026gt; dump_via_introspection ============= [SCHEMA] =============== e.g: name[Type]: arg (Type!) 00: Query getPhraseList[Phrases]: 01: Phrases id[]: owner[]: type[]: address[]: username[]: password[]: note[]: 04: Mutation RegisterUser[]: email (String!), username (String!), password (String!), LoginUser[]: username (String!), password (String!), UpdatePassword[]: username (String!), password (String!), AddPhrase[]: recType (String!), recAddr (String!), recUser (String!), recPass (String!), recNote (String!), 05: Response message[]: token[]: 07: __Schema 08: __Type 10: __Field 11: __InputValue 12: __EnumValue 13: __Directive GraphQLmap \u0026gt; I\u0026rsquo;m passing it through my proxy, so that it inherits the session/cookies of the user I had created.\nI tried to see if I could register over the admin user but got no luck. I then procedeed to uset the UpdatePassword mutation. This was the query I sent over with Burp.\nI then saw \u0026ldquo;Password updated successfully\u0026rdquo;. I changed the admins password. I then proceed to login and extracted the flag.\nHTB{1d0r5_4r3_s1mpl3_4nd_1mp4ctful!!} ","date":"26 January 2023","permalink":"/posts/ctf/cyberapocalypse23/web/passman/","section":"","summary":"Passman # Name: Passman","title":"Web"},{"content":"","date":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":null,"permalink":"/projects/","section":"Projects","summary":"","title":"Projects"}]